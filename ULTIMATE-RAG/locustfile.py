from locust import HttpUser, task, between

class MyUser(HttpUser):
    wait_time = between(1, 2)
    
    host = "http://34.124.196.93.sslip.io"  

    @task
    def query(self):
        url = "/query?query_str=Qu%E1%BB%91c%20l%E1%BB%99%20l%C3%A0%20g%C3%AC%3F"

        headers = {
            'accept': 'application/json',
        }

        response = self.client.post(url, headers=headers)

        if response.status_code != 200:
            print(f"Request failed with status {response.status_code}")


######################################################################################################

# from locust import HttpUser, task, between

# class MyUser(HttpUser):
#     # Thời gian nghỉ giữa các request của mỗi người dùng (1-2 giây)
#     wait_time = between(1, 2)
    
#     # Host của dịch vụ
#     host = "http://34.124.196.93.sslip.io"  # Địa chỉ host của service

#     @task
#     def query(self):
#         # Đường dẫn với query string
#         url = "/query?query_str=Qu%E1%BB%91c%20l%E1%BB%99%20l%C3%A0%20g%C3%AC%3F"

#         # Headers để chỉ định định dạng JSON
#         headers = {
#             'accept': 'application/json',
#         }

#         # Gửi POST request
#         response = self.client.post(url, headers=headers)

#         # Kiểm tra nếu response trả về status code 200
#         if response.status_code != 200:
#             print(f"Request failed with status {response.status_code}")

########################################################

# from locust import HttpUser, task, between

# class MyUser(HttpUser):
#     # Thời gian nghỉ giữa các request của mỗi người dùng (1-2 giây)
#     wait_time = between(1, 2)
    
#     # Host của dịch vụ
#     host = "http://nthaiduong233.pagekite.me"  # Cập nhật lại host với URL của service

#     @task
#     def generate(self):
#         # Payload JSON để gửi tới dịch vụ
#         payload = {
#             "inputs": "Quốc lộ là gì?",
#             "parameters": {
#                 "adapter_id": "null",
#                 "best_of": 1,
#                 "decoder_input_details": False,
#                 "details": True,
#                 "do_sample": True,
#                 "frequency_penalty": 0.1,
#                 "grammar": None,
#                 "max_new_tokens": 200,
#                 "repetition_penalty": 1.03,
#                 "return_full_text": False,
#                 "seed": None,
#                 "stop": ["photographer"],
#                 "temperature": 0.95,
#                 "top_k": 10,
#                 "top_n_tokens": 5,
#                 "top_p": 0.95,
#                 "truncate": None,
#                 "typical_p": 0.95,
#                 "watermark": True
#             }
#         }

#         # Headers để chỉ định Content-Type là JSON
#         headers = {
#             'accept': 'application/json',
#             'Content-Type': 'application/json',
#         }

#         # Gửi POST request với payload và headers
#         response = self.client.post("/generate", json=payload, headers=headers)

#         # Kiểm tra nếu response trả về status code 200
#         if response.status_code != 200:
#             print(f"Request failed with status {response.status_code}")



#############################################


# locust -f locustfile.py
# from locust import HttpUser, task, between

# class MyUser(HttpUser):
#     # Thời gian nghỉ giữa các request của mỗi người dùng (1-2 giây)
#     wait_time = between(1, 2)
    
#     # Host của dịch vụ
#     host = "http://35.240.234.213:81"

#     @task
#     def vectorize(self):
#         # Payload JSON để gửi tới dịch vụ
#         payload = {
#             "text": "Quốc lộ là gì?"
#         }

#         # Headers để chỉ định Content-Type là JSON
#         headers = {
#             'accept': 'application/json',
#             'Content-Type': 'application/json',
#         }

#         # Gửi POST request với payload và headers
#         response = self.client.post("/vectorize", json=payload, headers=headers)

#         # Kiểm tra nếu response trả về status code 200
#         if response.status_code != 200:
#             print(f"Request failed with status {response.status_code}")

############################################################################33

# from locust import HttpUser, TaskSet, task, between
# import json
# import weaviate

# near_vec = {
#             "vector": [
#                 0.48984494805336,
#                 -0.1361308991909027,
#                 -0.011941028758883476,
#                 -0.15343186259269714,
#                 0.45687413215637207,
#                 0.1730196177959442,
#                 0.10544200241565704,
#                 0.15863783657550812,
#                 0.38379523158073425,
#                 -0.1439642310142517,
#                 0.3035742938518524,
#                 -0.40300214290618896,
#                 0.08216147869825363,
#                 0.20011290907859802,
#                 -0.24046680331230164,
#                 0.6886003017425537,
#                 0.3455941379070282,
#                 0.30029886960983276,
#                 -0.03135056793689728,
#                 0.3105994164943695,
#                 -0.025166921317577362,
#                 -0.29787343740463257,
#                 0.4627927541732788,
#                 0.23636026680469513,
#                 -0.12809640169143677,
#                 0.01427902840077877,
#                 -0.20107796788215637,
#                 0.3366328477859497,
#                 -0.02562359906733036,
#                 0.3071966767311096,
#                 0.1575366109609604,
#                 -0.0695473775267601,
#                 0.48693621158599854,
#                 0.40645167231559753,
#                 0.19891229271888733,
#                 -0.06968580186367035,
#                 -0.033455152064561844,
#                 0.6628435254096985,
#                 -0.4340670704841614,
#                 -0.11419595777988434,
#                 -0.29399555921554565,
#                 -0.26945191621780396,
#                 0.3479538857936859,
#                 0.5139024257659912,
#                 -0.006749207153916359,
#                 0.20339523255825043,
#                 0.6171802282333374,
#                 -0.35173502564430237,
#                 0.5958091020584106,
#                 0.013027379289269447,
#                 0.20319834351539612,
#                 -0.6294992566108704,
#                 -0.26154825091362,
#                 -1.0309048891067505,
#                 -0.6058652997016907,
#                 -0.06464073807001114,
#                 0.13836893439292908,
#                 0.22414074838161469,
#                 -0.5985190868377686,
#                 0.002172870095819235,
#                 -0.3477645516395569,
#                 -0.18209023773670197,
#                 0.7450012564659119,
#                 0.2728463411331177,
#                 0.44244569540023804,
#                 0.416993111371994,
#                 0.4731540083885193,
#                 0.18849532306194305,
#                 0.4144600033760071,
#                 -0.21811127662658691,
#                 0.17197689414024353,
#                 -0.3413808047771454,
#                 0.2101386934518814,
#                 -0.15112337470054626,
#                 -0.5100011825561523,
#                 -0.5306313037872314,
#                 -0.021210193634033203,
#                 0.4897162616252899,
#                 0.3964550793170929,
#                 -0.1585502177476883,
#                 -0.01035015657544136,
#                 0.12393857538700104,
#                 -0.17327527701854706,
#                 -0.3225724399089813,
#                 0.06749807298183441,
#                 -0.19592510163784027,
#                 -0.14032022655010223,
#                 -0.03788762539625168,
#                 -0.269704133272171,
#                 0.3595111072063446,
#                 0.12014363706111908,
#                 0.17545096576213837,
#                 0.003977765329182148,
#                 0.6587803363800049,
#                 -0.18125832080841064,
#                 0.1393432319164276,
#                 -0.3165007531642914,
#                 0.5005760192871094,
#                 -0.2965327799320221,
#                 -0.36641430854797363,
#                 -0.032410699874162674,
#                 0.284807026386261,
#                 -0.18862135708332062,
#                 -0.046362705528736115,
#                 -0.3946887254714966,
#                 0.2572549283504486,
#                 -0.03705589473247528,
#                 0.09447610378265381,
#                 0.41866227984428406,
#                 -0.12176411598920822,
#                 0.3087247312068939,
#                 0.06334538012742996,
#                 0.1699991524219513,
#                 0.021561292931437492,
#                 -0.14322811365127563,
#                 0.31383687257766724,
#                 -0.36692288517951965,
#                 0.6648315787315369,
#                 0.063620924949646,
#                 0.20472465455532074,
#                 -0.2324148267507553,
#                 0.08328919857740402,
#                 -0.11286991834640503,
#                 -0.046052709221839905,
#                 -0.17842261493206024,
#                 0.21802805364131927,
#                 -0.612824022769928,
#                 0.2048410177230835,
#                 -0.8479371666908264,
#                 0.12019364535808563,
#                 0.5595284700393677,
#                 -0.15181587636470795,
#                 -0.2649821639060974,
#                 0.1857661008834839,
#                 -0.051711760461330414,
#                 0.0947868824005127,
#                 0.1302632987499237,
#                 0.13077062368392944,
#                 -0.04173269867897034,
#                 -0.07032028585672379,
#                 -0.1714474856853485,
#                 0.567220151424408,
#                 -0.3645859360694885,
#                 -0.35771656036376953,
#                 -0.20428384840488434,
#                 0.26434680819511414,
#                 -0.46211278438568115,
#                 0.4400898814201355,
#                 0.1259058117866516,
#                 -1.2444498538970947,
#                 0.2133651226758957,
#                 -0.01213743630796671,
#                 -0.3899415135383606,
#                 0.5072309374809265,
#                 -0.07501789927482605,
#                 0.08976834267377853,
#                 -0.969990074634552,
#                 0.17349937558174133,
#                 -0.21074378490447998,
#                 -0.1474936157464981,
#                 0.05078672990202904,
#                 -0.12095259875059128,
#                 -0.2563408613204956,
#                 0.4957524240016937,
#                 0.14566859602928162,
#                 0.2251954972743988,
#                 -0.016784055158495903,
#                 0.29031234979629517,
#                 -0.2923123240470886,
#                 0.18335379660129547,
#                 0.22383514046669006,
#                 -0.2799164652824402,
#                 0.3021072447299957,
#                 0.3790528178215027,
#                 1.0514848232269287,
#                 0.10885273665189743,
#                 0.03716982901096344,
#                 0.8176491260528564,
#                 -0.2231317013502121,
#                 0.13895145058631897,
#                 -0.2841176390647888,
#                 0.2908572852611542,
#                 0.10053785890340805,
#                 -0.3131289780139923,
#                 0.04846769571304321,
#                 -0.45578908920288086,
#                 -0.5745348334312439,
#                 -0.08331148326396942,
#                 -0.45356184244155884,
#                 0.05288604646921158,
#                 0.6480412483215332,
#                 0.4902280569076538,
#                 -0.6492109894752502,
#                 0.08914387226104736,
#                 -0.16419905424118042,
#                 -0.17416653037071228,
#                 0.18833285570144653,
#                 0.3531382977962494,
#                 -0.6501544117927551,
#                 0.08665899187326431,
#                 -0.04829638451337814,
#                 -0.1580980271100998,
#                 0.5081025958061218,
#                 0.3281342089176178,
#                 0.5650891661643982,
#                 0.257886677980423,
#                 0.0937374159693718,
#                 0.21667814254760742,
#                 -0.296979159116745,
#                 -0.22711654007434845,
#                 -0.5387373566627502,
#                 -0.19897566735744476,
#                 0.1256299912929535,
#                 0.024845456704497337,
#                 0.1576727032661438,
#                 0.22838017344474792,
#                 0.05250585824251175,
#                 0.10868237912654877,
#                 0.0048664640635252,
#                 -0.04169851168990135,
#                 -0.0928867906332016,
#                 -0.4076370596885681,
#                 -0.021863119676709175,
#                 -0.04204096645116806,
#                 0.09012933075428009,
#                 -0.06891363859176636,
#                 0.3473392128944397,
#                 -0.8026727437973022,
#                 0.0862404853105545,
#                 0.35158097743988037,
#                 -0.05674158036708832,
#                 0.28276509046554565,
#                 0.08038480579853058,
#                 -0.14802126586437225,
#                 0.12486889213323593,
#                 0.0913529321551323,
#                 0.09333807229995728,
#                 -0.05974946171045303,
#                 0.12020440399646759,
#                 0.20321153104305267,
#                 -0.4769829511642456,
#                 0.006649312563240528,
#                 0.444031685590744,
#                 0.12341564148664474,
#                 -0.2250388115644455,
#                 0.45092085003852844,
#                 -0.27533453702926636,
#                 -0.6321033239364624,
#                 0.9561063051223755,
#                 -0.22760693728923798,
#                 0.18821904063224792,
#                 0.09119034558534622,
#                 -0.13210824131965637,
#                 -0.24244239926338196,
#                 0.10175997018814087,
#                 -0.07671914249658585,
#                 -0.10591849684715271,
#                 -0.20006783306598663,
#                 -0.0626576766371727,
#                 -0.014873565174639225,
#                 -0.3703516125679016,
#                 -0.251748651266098,
#                 -0.19880624115467072,
#                 0.11542817205190659,
#                 -0.03323255106806755,
#                 0.14183661341667175,
#                 0.050444990396499634,
#                 0.4841762185096741,
#                 0.4163356125354767,
#                 0.13375933468341827,
#                 -0.008683302439749241,
#                 0.11089210212230682,
#                 -0.24314048886299133,
#                 0.5035786628723145,
#                 -0.32568642497062683,
#                 0.2937243580818176,
#                 0.41813910007476807,
#                 0.017125871032476425,
#                 -0.12825414538383484,
#                 0.13690078258514404,
#                 -0.6146368384361267,
#                 -0.1085939109325409,
#                 0.5273698568344116,
#                 0.24561482667922974,
#                 0.06501540541648865,
#                 0.1352144032716751,
#                 0.06514404714107513,
#                 0.22334668040275574,
#                 0.10133849829435349,
#                 -0.07359038293361664,
#                 -0.19088372588157654,
#                 -0.17973074316978455,
#                 0.3759532570838928,
#                 0.37886425852775574,
#                 0.3556208312511444,
#                 -0.7024440765380859,
#                 -0.3022322952747345,
#                 -0.010733071714639664,
#                 -0.3739689588546753,
#                 -0.004340223968029022,
#                 -0.0022246199660003185,
#                 0.4088073968887329,
#                 -0.035413287580013275,
#                 0.04038139432668686,
#                 -0.6697781682014465,
#                 0.1607874184846878,
#                 0.30846133828163147,
#                 0.05208219587802887,
#                 0.5961228013038635,
#                 0.6749981641769409,
#                 0.09855081886053085,
#                 -0.027886224910616875,
#                 -0.4395867586135864,
#                 -0.30760952830314636,
#                 -0.20774729549884796,
#                 0.15477848052978516,
#                 0.9050881266593933,
#                 -0.6060042381286621,
#                 -0.49053964018821716,
#                 -0.0549776554107666,
#                 0.159283846616745,
#                 -0.6534450054168701,
#                 -0.06994646042585373,
#                 0.42140644788742065,
#                 -0.24742183089256287,
#                 -0.425601601600647,
#                 0.3710445761680603,
#                 -0.1745108962059021,
#                 -0.21915756165981293,
#                 0.05150756612420082,
#                 0.16911962628364563,
#                 -0.10474003106355667,
#                 -0.1413036584854126,
#                 -0.2466953843832016,
#                 -0.34752780199050903,
#                 -0.29994675517082214,
#                 -0.03428307920694351,
#                 -0.7326314449310303,
#                 -0.05861520767211914,
#                 -0.8532444834709167,
#                 -0.04990791529417038,
#                 0.2553466856479645,
#                 -0.17607733607292175,
#                 0.22521063685417175,
#                 0.21808035671710968,
#                 0.757689356803894,
#                 0.031769104301929474,
#                 -0.29905039072036743,
#                 0.3102855384349823,
#                 0.4610619843006134,
#                 -0.07477764785289764,
#                 0.24673433601856232,
#                 -0.00027719372883439064,
#                 0.07594378292560577,
#                 0.5284591913223267,
#                 0.22377513349056244,
#                 -0.27791646122932434,
#                 0.020855730399489403,
#                 0.28861546516418457,
#                 -0.2916417717933655,
#                 0.6556469798088074,
#                 -0.29089319705963135,
#                 -0.22639313340187073,
#                 0.31071099638938904,
#                 0.02101729065179825,
#                 0.24591109156608582,
#                 -0.20376582443714142,
#                 -0.3922959268093109,
#                 -0.376488596200943,
#                 0.6460122466087341,
#                 0.3770347237586975,
#                 -0.03853828087449074,
#                 -0.16339543461799622,
#                 0.11738096922636032,
#                 -0.4510441720485687,
#                 0.2845868170261383,
#                 0.5231958031654358,
#                 0.1852186620235443,
#                 -0.5784925818443298,
#                 -0.3294650912284851,
#                 -0.35810500383377075,
#                 0.10029111802577972,
#                 0.053007856011390686,
#                 -0.556451141834259,
#                 0.43123483657836914,
#                 -0.01062259916216135,
#                 0.17962560057640076,
#                 0.23273922502994537,
#                 0.3316881060600281,
#                 -0.16018155217170715,
#                 -0.11023160070180893,
#                 -0.012269418686628342,
#                 0.14438796043395996,
#                 -0.029434368014335632,
#                 -0.14078618586063385,
#                 -0.4014846086502075,
#                 0.7213186025619507,
#                 0.16684521734714508,
#                 0.20904269814491272,
#                 -0.0035092681646347046,
#                 0.56803959608078,
#                 0.5897603034973145,
#                 0.24458321928977966,
#                 -0.13487589359283447,
#                 0.04808757081627846,
#                 -0.3128672242164612,
#                 0.6382880806922913,
#                 0.32398247718811035,
#                 0.17088112235069275,
#                 -0.321662575006485,
#                 0.01866079866886139,
#                 0.3733964264392853,
#                 0.35600435733795166,
#                 0.12068093568086624,
#                 0.21578894555568695,
#                 0.10880088061094284,
#                 -0.16951797902584076,
#                 -0.3374727964401245,
#                 0.1265007108449936,
#                 0.30190691351890564,
#                 0.13375554978847504,
#                 0.37520068883895874,
#                 -0.3773285746574402,
#                 -0.23023732006549835,
#                 0.7125562429428101,
#                 -0.002619913313537836,
#                 0.14204460382461548,
#                 0.30043646693229675,
#                 0.025076813995838165,
#                 0.692355215549469,
#                 -0.1613243669271469,
#                 0.0684598758816719,
#                 -0.017374824732542038,
#                 -0.21771720051765442,
#                 -0.32018816471099854,
#                 0.47955888509750366,
#                 -1.1294636726379395,
#                 0.03839421644806862,
#                 0.47743088006973267,
#                 -0.11314298212528229,
#                 -0.17362913489341736,
#                 0.47534412145614624,
#                 -0.9556554555892944,
#                 0.24187332391738892,
#                 -0.29430776834487915,
#                 0.5597621202468872,
#                 0.7956790924072266,
#                 0.19870683550834656,
#                 -0.25412365794181824,
#                 0.3742830157279968,
#                 0.006189071107655764,
#                 -0.20771221816539764,
#                 -0.1448059231042862,
#                 -0.2927272319793701,
#                 -0.2529136836528778,
#                 0.2622603178024292,
#                 -0.41219013929367065,
#                 0.295226514339447,
#                 0.014919359236955643,
#                 -0.11548048257827759,
#                 -0.2604433000087738,
#                 0.08642959594726562,
#                 0.10653848201036453,
#                 -0.016582012176513672,
#                 0.3448677361011505,
#                 -0.39509040117263794,
#                 -0.38888758420944214,
#                 -0.368328332901001,
#                 -0.19450485706329346,
#                 0.9592092037200928,
#                 0.20479246973991394,
#                 -0.19654734432697296,
#                 0.11493657529354095,
#                 0.0047515882179141045,
#                 0.7689834833145142,
#                 0.6477484703063965,
#                 -0.3506934642791748,
#                 0.6207593083381653,
#                 -0.3279976546764374,
#                 0.2239418774843216,
#                 -0.5099048018455505,
#                 -0.9162126183509827,
#                 -0.20138682425022125,
#                 -0.15082122385501862,
#                 0.1432439535856247,
#                 -0.4309612810611725,
#                 0.02930072695016861,
#                 0.8203945755958557,
#                 -0.4029305577278137,
#                 -0.2460329234600067,
#                 0.19806984066963196,
#                 0.10050402581691742,
#                 -0.1020275354385376,
#                 -0.23866692185401917,
#                 -0.1932876855134964,
#                 -0.19661672413349152,
#                 0.11548329889774323,
#                 -0.09017062187194824,
#                 -0.7102165222167969,
#                 -0.1602465957403183,
#                 0.01598920300602913,
#                 -0.1793816089630127,
#                 -0.05622163414955139,
#                 0.006541030015796423,
#                 0.4716792702674866,
#                 0.07575889676809311,
#                 -0.1815260648727417,
#                 0.42997264862060547,
#                 0.36129170656204224,
#                 -0.5494436621665955,
#                 0.060872044414281845,
#                 -0.21759150922298431,
#                 -0.3590896427631378,
#                 -0.36660149693489075,
#                 0.36794888973236084,
#                 -0.5142392516136169,
#                 0.14963078498840332,
#                 -0.6177688241004944,
#                 -0.4276556968688965,
#                 0.24645672738552094,
#                 -0.31257519125938416,
#                 -0.14218372106552124,
#                 -0.24579036235809326,
#                 -0.46749064326286316,
#                 -0.12177419662475586,
#                 -0.06873983889818192,
#                 -0.08115264773368835,
#                 0.3583701252937317,
#                 -0.3474770784378052,
#                 -0.23451581597328186,
#                 0.36271724104881287,
#                 -0.1038731038570404,
#                 0.06507985293865204,
#                 0.3978835642337799,
#                 0.26575058698654175,
#                 -0.1034519374370575,
#                 0.7339314222335815,
#                 0.05157794430851936,
#                 0.16642718017101288,
#                 -0.01253157202154398,
#                 0.15105889737606049,
#                 0.2860216498374939,
#                 -0.1540803611278534,
#                 0.26175230741500854,
#                 0.5150129795074463,
#                 -0.20872364938259125,
#                 0.2718997895717621,
#                 -0.408823698759079,
#                 0.19489002227783203,
#                 -0.531266450881958,
#                 -0.1733863353729248,
#                 -0.17905238270759583,
#                 0.014355424791574478,
#                 0.0975622609257698,
#                 0.09533225744962692,
#                 0.6019575595855713,
#                 0.3132396638393402,
#                 -0.08893155306577682,
#                 0.6724424362182617,
#                 -0.17997604608535767,
#                 0.3112585246562958,
#                 -0.005352359730750322,
#                 0.06181033328175545,
#                 -0.1406945139169693,
#                 0.060786426067352295,
#                 0.024168383330106735,
#                 0.017337102442979813,
#                 0.04724305868148804,
#                 -0.5032195448875427,
#                 -0.12557575106620789,
#                 -0.11283615231513977,
#                 -0.2530372142791748,
#                 -0.10137421637773514,
#                 0.3934028148651123,
#                 -0.16288740932941437,
#                 0.10253971070051193,
#                 0.01679592952132225,
#                 0.4794439375400543,
#                 0.03637684881687164,
#                 0.28663524985313416,
#                 0.1450333148241043,
#                 0.5313366651535034,
#                 -0.37686529755592346,
#                 0.014501912519335747,
#                 -0.09838256984949112,
#                 -0.015291186049580574,
#                 0.8216179609298706,
#                 0.4469149708747864,
#                 0.4454151391983032,
#                 0.3684162497520447,
#                 0.23586152493953705,
#                 -0.2836773991584778,
#                 -0.5054245591163635,
#                 0.7948490977287292,
#                 0.2378612458705902,
#                 0.11753822863101959,
#                 0.12339634448289871,
#                 0.24452465772628784,
#                 -0.2664259672164917,
#                 -0.34903648495674133,
#                 -0.15116994082927704,
#                 0.47945427894592285,
#                 0.7388631105422974,
#                 0.7155185341835022,
#                 0.7485789060592651,
#                 -0.06166098266839981,
#                 -0.24795715510845184,
#                 -0.016058949753642082,
#                 0.12656743824481964,
#                 -0.34550052881240845,
#                 -0.5281702280044556,
#                 -0.23838923871517181,
#                 0.3574342727661133,
#                 -0.02089753746986389,
#                 0.17460009455680847,
#                 0.35865336656570435,
#                 -0.21760700643062592,
#                 0.17926925420761108,
#                 -0.12483847886323929,
#                 0.40354815125465393,
#                 0.04166325181722641,
#                 -0.254408061504364,
#                 0.8472944498062134,
#                 0.06959733366966248,
#                 0.2677035331726074,
#                 -0.2028440237045288,
#                 -0.060338348150253296,
#                 0.18784062564373016,
#                 -0.731927752494812,
#                 0.06894560158252716,
#                 0.3906015455722809,
#                 0.2511894702911377,
#                 -0.6104525327682495,
#                 0.34834787249565125,
#                 -0.3504827618598938,
#                 0.3434281051158905,
#                 -0.21172186732292175,
#                 0.16891218721866608,
#                 -0.11635354906320572,
#                 -0.2858085036277771,
#                 -0.1551048308610916,
#                 0.3648006319999695,
#                 0.03765663132071495,
#                 -0.016002163290977478,
#                 0.05818473547697067,
#                 -0.6610057353973389,
#                 -0.11236175894737244,
#                 0.4203730821609497,
#                 0.3138178288936615,
#                 0.6305713653564453,
#                 -0.28024986386299133,
#                 -0.3052767217159271,
#                 0.08447395265102386,
#                 0.11046131700277328,
#                 -0.22279341518878937,
#                 -0.2568243741989136,
#                 -0.12735453248023987,
#                 0.45835039019584656,
#                 0.04556535556912422,
#                 0.21400971710681915,
#                 -0.5664476752281189,
#                 0.15929090976715088,
#                 0.017401231452822685,
#                 0.2755446434020996,
#                 -0.15732237696647644,
#                 -0.03413490951061249,
#                 -0.019105684012174606,
#                 0.31164300441741943,
#                 0.0669497549533844,
#                 0.052269622683525085,
#                 -0.4899836480617523,
#                 -0.2590107321739197,
#                 -0.045834120362997055,
#                 0.5913528800010681,
#                 0.3798271119594574,
#                 0.35578256845474243,
#                 -0.42734214663505554,
#                 -0.04533764719963074,
#                 -0.10526247322559357,
#                 0.11606937646865845,
#                 0.04437056556344032,
#                 0.11004223674535751,
#                 0.07870051264762878,
#                 0.21548935770988464,
#                 0.719664990901947,
#                 0.06951536238193512,
#                 0.05004948005080223,
#                 0.11810269206762314,
#                 -0.4432987570762634,
#                 -0.2548210024833679,
#                 0.03636512905359268,
#                 -0.0489029735326767,
#                 0.2826078236103058,
#                 0.35752445459365845,
#                 -0.1938396543264389,
#                 0.0823436751961708,
#                 -0.48638930916786194,
#                 -0.524970531463623,
#                 0.20543654263019562,
#                 0.24233868718147278,
#                 0.36597979068756104,
#                 -0.16617853939533234,
#                 0.10587254911661148,
#                 -0.1283024102449417,
#                 0.12769806385040283,
#                 -0.10707710683345795,
#                 -0.25720417499542236,
#                 0.11406093835830688,
#                 -0.4310450255870819,
#                 0.8370448350906372,
#                 0.6332160830497742,
#                 -0.29978978633880615,
#                 -0.121220663189888,
#                 -0.017648350447416306,
#                 0.5722786784172058,
#                 -0.44328391551971436,
#                 0.09441640973091125,
#                 0.30243003368377686,
#                 -0.18852543830871582,
#                 -0.7324192523956299,
#                 0.7434138655662537,
#                 -0.027445588260889053,
#                 -0.21472293138504028,
#                 -0.053341884166002274,
#                 0.2676287889480591,
#                 -0.054999783635139465,
#                 -0.21319709718227386,
#                 -0.15439026057720184,
#                 0.8312890529632568,
#                 -0.34449443221092224,
#                 0.13738799095153809,
#                 -0.08344223350286484,
#                 0.3551177978515625,
#                 -0.4260964095592499,
#                 0.499526709318161,
#                 -0.11987854540348053,
#                 0.0023113619536161423,
#                 0.49710243940353394,
#                 0.5727686285972595,
#                 -0.2051207721233368,
#                 0.1683492809534073,
#                 0.6334090828895569,
#                 0.47779369354248047,
#                 -0.3787136673927307,
#                 0.25496140122413635,
#                 -0.21447838842868805,
#                 -0.8252220749855042,
#                 -0.38458237051963806,
#                 -0.15458062291145325,
#                 -0.037382371723651886,
#                 0.2798578441143036,
#                 0.3148222267627716,
#                 -0.017230013385415077,
#                 0.1715604066848755,
#                 0.7430470585823059,
#                 0.08284146338701248,
#                 0.5560135245323181,
#                 0.14689511060714722,
#                 -0.011947928927838802,
#                 0.2321546971797943,
#                 0.10076657682657242,
#                 0.4097221791744232,
#                 -0.22591060400009155,
#                 0.35026663541793823,
#                 -0.0873023271560669,
#                 -0.07048871368169785,
#                 -0.19348034262657166,
#                 0.8611299991607666
#             ]
#             }
    
# class WeaviateTest(TaskSet):
#     @task
#     def query_weaviate(self):
#         # Tạo payload cho query
#         query_payload = {
#             "query": """
#             {
#                 Get {
#                     Document(nearVector: {
#                         vector: %s
#                     }, limit: 3) {
#                         content
#                         _additional {
#                             certainty
#                         }
#                     }
#                 }
#             }""" % json.dumps(near_vec["vector"])
#         }

#         # Gửi POST request sử dụng self.client để Locust có thể theo dõi
#         with self.client.post("/v1/graphql", json=query_payload, catch_response=True) as response:
#             if response.status_code == 200:
#                 response.success()
#             else:
#                 response.failure(f"Failed with status {response.status_code}")

# class WebsiteUser(HttpUser):
#     tasks = [WeaviateTest]
#     wait_time = between(1, 2)
#     host = "http://34.87.59.75:85"  # IP Weaviate của bạn


# from locust import HttpUser, task, between
# import requests

# class MyUser(HttpUser):
#     # Thời gian nghỉ giữa các request của mỗi người dùng (1-2 giây)
#     wait_time = between(1, 2)
    
#     # Host của dịch vụ
#     host = "http://nthaiduong233.pagekite.me"  # Cập nhật lại host với URL của service

#     @task
#     def generate_with_context(self):
#         # Context và câu hỏi
#         context_str = "'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 39.Phân loại đường bộ \n Nội dung như sau: 1. Mạng lưới đường bộ được chia thành sáu hệ thống, gồm quốc lộ, đường tỉnh, đường huyện, đường xã, đường đô thị và đường chuyên dùng, quy định như sau: a) Quốc lộ là đường nối liền Thủ đô Hà Nội với trung tâm hành chính cấp tỉnh; đường nối liền trung tâm hành chính cấp tỉnh từ ba địa phương trở lên; đường nối liền từ cảng biển quốc tế, cảng hàng không quốc tế đến các cửa khẩu quốc tế, cửa khẩu chính trên đường bộ; đường có vị trí đặc biệt quan trọng đối với sự phát triển kinh tế - xã hội của vùng, khu vực;', 'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 40.Đặt tên, số hiệu đường bộ \n Nội dung như sau: 1. Đường bộ được đặt tên hoặc số hiệu như sau: a) Tên đường được đặt tên danh nhân, người có công hoặc tên di tích, sự kiện lịch sử, văn hóa, tên địa danh hoặc tên theo tập quán; số hiệu đường được đặt theo số tự nhiên kèm theo chữ cái nếu cần thiết; trường hợp đường đô thị trùng với quốc lộ thì sử dụng cả tên đường đô thị và tên, số hiệu quốc lộ; b) Tên, số hiệu đường bộ tham gia vào mạng lưới đường bộ trong khu vực, đường bộ quốc tế thực hiện theo thỏa thuận giữa Việt Nam với các quốc gia có liên quan.', 'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 39.Phân loại đường bộ \n Nội dung như sau: trọng đối với sự phát triển kinh tế - xã hội của vùng, khu vực; b) Đường tỉnh là đường nối trung tâm hành chính của tỉnh với trung tâm hành chính của huyện hoặc trung tâm hành chính của tỉnh lân cận; đường có vị trí quan trọng đối với sự phát triển kinh tế - xã hội của tỉnh; c) Đường huyện là đường nối trung tâm hành chính của huyện với trung tâm hành chính của xã, cụm xã hoặc trung tâm hành chính của huyện lân cận; đường có vị trí quan trọng đối với sự phát triển kinh tế - xã hội của huyện; 82 CÔNG BÁO/Số'"
#         query_str = "Quốc lộ là gì?"
        
#         # Tạo template theo cấu trúc yêu cầu
#         template = (
#             "We have provided context information below. \n"
#             "---------------------\n"
#             "'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 39.Phân loại đường bộ \n Nội dung như sau: 1. Mạng lưới đường bộ được chia thành sáu hệ thống, gồm quốc lộ, đường tỉnh, đường huyện, đường xã, đường đô thị và đường chuyên dùng, quy định như sau: a) Quốc lộ là đường nối liền Thủ đô Hà Nội với trung tâm hành chính cấp tỉnh; đường nối liền trung tâm hành chính cấp tỉnh từ ba địa phương trở lên; đường nối liền từ cảng biển quốc tế, cảng hàng không quốc tế đến các cửa khẩu quốc tế, cửa khẩu chính trên đường bộ; đường có vị trí đặc biệt quan trọng đối với sự phát triển kinh tế - xã hội của vùng, khu vực;', 'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 40.Đặt tên, số hiệu đường bộ \n Nội dung như sau: 1. Đường bộ được đặt tên hoặc số hiệu như sau: a) Tên đường được đặt tên danh nhân, người có công hoặc tên di tích, sự kiện lịch sử, văn hóa, tên địa danh hoặc tên theo tập quán; số hiệu đường được đặt theo số tự nhiên kèm theo chữ cái nếu cần thiết; trường hợp đường đô thị trùng với quốc lộ thì sử dụng cả tên đường đô thị và tên, số hiệu quốc lộ; b) Tên, số hiệu đường bộ tham gia vào mạng lưới đường bộ trong khu vực, đường bộ quốc tế thực hiện theo thỏa thuận giữa Việt Nam với các quốc gia có liên quan.', 'Trích dẫn ở: Document Title\nChương III\nKẾT CẤU HẠ TẦNG GIAO THÔNG ĐƯỜNG BỘ\nĐiều 39.Phân loại đường bộ \n Nội dung như sau: trọng đối với sự phát triển kinh tế - xã hội của vùng, khu vực; b) Đường tỉnh là đường nối trung tâm hành chính của tỉnh với trung tâm hành chính của huyện hoặc trung tâm hành chính của tỉnh lân cận; đường có vị trí quan trọng đối với sự phát triển kinh tế - xã hội của tỉnh; c) Đường huyện là đường nối trung tâm hành chính của huyện với trung tâm hành chính của xã, cụm xã hoặc trung tâm hành chính của huyện lân cận; đường có vị trí quan trọng đối với sự phát triển kinh tế - xã hội của huyện; 82 CÔNG BÁO/Số'"
#             "\n---------------------\n"
#             "Given this information, please answer the question: Quốc lộ là gì?\n"
#         )
#         # Format prompt
#         prompt = template.format(context_str=context_str, query_str=query_str)
        
#         # Payload JSON để gửi tới dịch vụ
#         payload = {
#             "inputs": prompt,
#             "parameters": {
#                 "max_new_tokens": 200,
#                 "temperature": 0.95,
#                 "adapter_id": "null",
#                 "best_of": 1,
#                 "decoder_input_details": False,
#                 "details": True,
#                 "do_sample": True,
#                 "frequency_penalty": 0.1,
#                 "grammar": None,
#                 "repetition_penalty": 1.03,
#                 "return_full_text": False,
#                 "seed": None,
#                 "stop": ["photographer"],
#                 "top_k": 10,
#                 "top_n_tokens": 5,
#                 "top_p": 0.95,
#                 "truncate": None,
#                 "typical_p": 0.95,
#                 "watermark": True
#             }
#         }

#         # Headers để chỉ định Content-Type là JSON
#         headers = {
#             'accept': 'application/json',
#             'Content-Type': 'application/json',
#         }

#         # Gửi POST request với payload và headers
#         response = self.client.post("/generate", json=payload, headers=headers)

#         # Kiểm tra nếu response trả về status code 200
#         if response.status_code != 200:
#             print(f"Request failed with status {response.status_code}")
#         else:
#             print(f"Response: {response.json()}")
