name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Test-workflow:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: maythangml
          POSTGRES_PASSWORD: maythangml
          POSTGRES_DB: TIMENEST
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov httpx

    - name: Run tests
      working-directory: ./src
      env:
        TOGETHER_AI_API_KEY: ${{ secrets.TOGETHER_AI_API_KEY }}
        AWS_POSTGRES_URL: localhost
        POSTGRES_USER: maythangml
        POSTGRES_PASSWORD: maythangml
        POSTGRES_DB: TIMENEST
        POSTGRES_PORT: 5432
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        MONGDB_TIMENEST_DN_NAME: TIMENEST
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        REDIRECT_URL: http://127.0.0.1:5050/authorization/auth
        FRONTEND_URL: http://127.0.0.1:5001/create-acount
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        JWT_REFRESH_SECRET_KEY: ${{ secrets.JWT_REFRESH_SECRET_KEY }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      run: |
        python -m pytest tests/ -v

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: test

  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Install flyctl
  #     run: |
  #       curl -L https://fly.io/install.sh | sh
  #       echo "$HOME/.fly/bin" >> $GITHUB_PATH

  #   - name: Deploy to fly.io
  #     working-directory: ./src
  #     env:
  #       FLY_API_TOKEN: ${{ secrets.FLYCTL_ACCESS_TOKEN }}
  #     run: |
  #       flyctl auth login "${{ secrets.FLYCTL_ACCESS_TOKEN }}"
        
  #       flyctl apps create grand-backend --org personal || true

  #       flyctl secrets set TOGETHER_AI_API_KEY="${{ secrets.TOGETHER_AI_API_KEY }}"
  #       flyctl secrets set AWS_POSTGRES_URL="${{ secrets.AWS_POSTGRES_URL }}"
  #       flyctl secrets set POSTGRES_USER="${{ secrets.POSTGRES_USER }}"
  #       flyctl secrets set POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}"
  #       flyctl secrets set POSTGRES_DB="${{ secrets.POSTGRES_DB }}"
  #       flyctl secrets set POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}"
  #       flyctl secrets set MONGODB_URL="${{ secrets.MONGDB_URL }}"
  #       flyctl secrets set MONGDB_TIMENEST_DN_NAME="${{ secrets.MONGDB_TIMENEST_DN_NAME }}"
  #       flyctl secrets set MAILGUN_API_KEY="${{ secrets.MAILGUN_API_KEY }}"
  #       flyctl secrets set GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
  #       flyctl secrets set GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}"
  #       flyctl secrets set SECRET_KEY="${{ secrets.SECRET_KEY }}"
  #       flyctl secrets set REDIRECT_URL="${{ secrets.REDIRECT_URL }}"
  #       flyctl secrets set FRONTEND_URL="${{ secrets.FRONTEND_URL }}"
  #       flyctl secrets set JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
  #       flyctl secrets set JWT_REFRESH_SECRET_KEY="${{ secrets.JWT_REFRESH_SECRET_KEY }}"
  #       flyctl secrets set REDIS_URL="${{ secrets.REDIS_URL }}"
  #       flyctl secrets set REDIS_PORT="${{ secrets.REDIS_PORT }}"
  #       flyctl secrets set REDIS_PASSWORD="${{ secrets.REDIS_PASSWORD }}"

  #       flyctl deploy